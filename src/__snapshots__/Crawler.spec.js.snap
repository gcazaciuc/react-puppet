// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Crawler spec Should  1`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should  2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should be  1`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should be  2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should be able to construct hierarchi 1`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should be able to construct hierarchi 2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should be able to construct hierarchical slices 1`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should be able to construct hierarchical slices 2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should be able to parse a simple HTML file and generate the styles & React comps 1`] = `
"import { style } from 'typestyle';
const colors = { purpleHeart: '#0000FF', fern: '#008000' };
export const content = style({
    width: '100px',
    height: '100px',
    background: '#0000FF',
    $nest: { '&:hover': { background: '#008000' } }
});
"
`;

exports[`Crawler spec Should be able to parse a simple HTML file and generate the styles & React comps 2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should parse inline styles on elements 1`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should parse inline styles on elements 2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should parse inline styles on elements 3`] = `
"import { style } from 'typestyle';
const colors = { sunglow: '#FFD700' };
export const content = style({ width: '500px', background: '#FFD700' });
"
`;

exports[`Crawler spec Should parse inline styles on elements 4`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;

exports[`Crawler spec Should parse pseudo classes styles on elements 1`] = `
"import { style } from 'typestyle';
const colors = { purpleHeart: '#0000FF', white: '#FFFFFF' };
export const content = style({
    width: '100px',
    height: '100px',
    background: '#0000FF',
    $nest: {
        '&:hover': { color: '#FFFFFF', background: 'rgba(255, 0, 255, 0.1)' }
    }
});
"
`;

exports[`Crawler spec Should parse pseudo classes styles on elements 2`] = `
"import * as React from 'react';
import * as componentStyle from './ComponentStyle';
export class Component extends React.Component {
    render() {
        return (
            <p className={\`'content' \${componentStyle.content}\`}>
                Test content
            </p>
        );
    }
}
"
`;
